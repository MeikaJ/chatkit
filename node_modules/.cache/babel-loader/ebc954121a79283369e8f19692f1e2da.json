{"ast":null,"code":"var _jsxFileName = \"/Users/meikaprince/Desktop/purrrfectPals/purrrfectpals/src/App.js\";\n// import React from 'react';\n// // import './App.css';\n// import Chatkit from \"@pusher/chatkit-client\";\n// import MessageList from './components/MessageList'\n// import { instanceLocator, tokenUrl } from './config';\n// class App extends React.Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       messages: []\n//     }\n//   }\n//   componentDidMount() {\n//     //   const chatKitManager = new Chatkit.ChatManager({\n//     //     instanceLocator,\n//     //     userId: \"meeks\",\n//     //     tokenProvider: new Chatkit.chatManager({\n//     //       url: tokenUrl\n//     //     })\n//     //   })\n//     const tokenProvider = new Chatkit.TokenProvider({\n//       url: \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/09f679ce-bb4d-4a68-a035-3cd337905ada/token\"\n//     });\n//     const chatManager = new Chatkit.ChatManager({\n//       instanceLocator: \"v1:us1:09f679ce-bb4d-4a68-a035-3cd337905ada\",\n//       userId: \"meeks\",\n//       tokenProvider: tokenProvider\n//     });\n//     chatManager\n//       .connect()\n//       .then(currentUser => {\n//         currentUser.subscribeToRoomMultipart({\n//           roomId: currentUser.rooms[0].id,\n//           hooks: {\n//             onMessage: message => {\n//               console.log(message.text)\n//               this.setState({\n//                 messages: [...this.state.messages, message]\n//               })\n//             }\n//           }\n//         });\n//       })\n//       .catch(error => {\n//         console.error(\"error:\", error);\n//       });\n//     // chatKitManager.connect()\n//     //   .then(currentUser => {\n//     //     currentUser.AddToRoom({\n//     //       roomId: 'ae5d82d6 - f5ad - 421c- a3cf - 10c5d55e4af2',\n//     //       hook: {\n//     //         onNewMessage: message => {\n//     //           console.log('message.text', message.text);\n//     //         }\n//     //       }\n//     //     })\n//     //   })\n//   }\n//   render() {\n//     return (\n//       <div className=\"app\">\n//         <MessageList messages={this.state.messages} />\n//       </div>\n//     )\n//   }\n// }\n// export default App;\n//   // state is private for the component\n// // props are changed through components\nimport React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\n\nclass ChatApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      currentRoom: {\n        users: []\n      },\n      messages: [],\n      users: []\n    };\n    this.addMessage = this.addMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const chatManager = new ChatManager({\n      instanceLocator: 'INSTANCE LOCATOR',\n      userId: this.props.currentId,\n      tokenProvider: new TokenProvider({\n        url: 'TOKEN PROVIDER'\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      this.setState({\n        currentUser: currentUser\n      });\n      return currentUser.subscribeToRoom({\n        roomId: \"ROOM_ID\",\n        messageLimit: 100,\n        hooks: {\n          onMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          }\n        }\n      });\n    }).then(currentRoom => {\n      this.setState({\n        currentRoom,\n        users: currentRoom.userIds\n      });\n    }).catch(error => console.log(error));\n  }\n\n  addMessage(text) {\n    this.state.currentUser.sendMessage({\n      text,\n      roomId: this.state.currentRoom.id\n    }).catch(error => console.error('error', error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Hi There, Ask us anything\"), React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Input, {\n      className: \"input-field\",\n      onSubmit: this.addMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChatApp;","map":{"version":3,"sources":["/Users/meikaprince/Desktop/purrrfectPals/purrrfectpals/src/App.js"],"names":["React","Component","ChatManager","TokenProvider","MessageList","Input","ChatApp","constructor","props","state","currentUser","currentRoom","users","messages","addMessage","bind","componentDidMount","chatManager","instanceLocator","userId","currentId","tokenProvider","url","connect","then","setState","subscribeToRoom","roomId","messageLimit","hooks","onMessage","message","userIds","catch","error","console","log","text","sendMessage","id","render"],"mappings":"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","sourcesContent":["// import React from 'react';\n// // import './App.css';\n// import Chatkit from \"@pusher/chatkit-client\";\n// import MessageList from './components/MessageList'\n// import { instanceLocator, tokenUrl } from './config';\n\n\n\n// class App extends React.Component {\n\n//   constructor() {\n//     super()\n//     this.state = {\n//       messages: []\n//     }\n//   }\n\n//   componentDidMount() {\n\n//     //   const chatKitManager = new Chatkit.ChatManager({\n//     //     instanceLocator,\n//     //     userId: \"meeks\",\n//     //     tokenProvider: new Chatkit.chatManager({\n//     //       url: tokenUrl\n//     //     })\n//     //   })\n\n//     const tokenProvider = new Chatkit.TokenProvider({\n//       url: \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/09f679ce-bb4d-4a68-a035-3cd337905ada/token\"\n//     });\n\n//     const chatManager = new Chatkit.ChatManager({\n//       instanceLocator: \"v1:us1:09f679ce-bb4d-4a68-a035-3cd337905ada\",\n//       userId: \"meeks\",\n//       tokenProvider: tokenProvider\n//     });\n\n//     chatManager\n//       .connect()\n//       .then(currentUser => {\n//         currentUser.subscribeToRoomMultipart({\n//           roomId: currentUser.rooms[0].id,\n//           hooks: {\n//             onMessage: message => {\n//               console.log(message.text)\n//               this.setState({\n//                 messages: [...this.state.messages, message]\n//               })\n//             }\n//           }\n//         });\n//       })\n//       .catch(error => {\n//         console.error(\"error:\", error);\n//       });\n\n\n//     // chatKitManager.connect()\n//     //   .then(currentUser => {\n//     //     currentUser.AddToRoom({\n//     //       roomId: 'ae5d82d6 - f5ad - 421c- a3cf - 10c5d55e4af2',\n//     //       hook: {\n//     //         onNewMessage: message => {\n//     //           console.log('message.text', message.text);\n//     //         }\n//     //       }\n//     //     })\n//     //   })\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"app\">\n//         <MessageList messages={this.state.messages} />\n\n\n//       </div>\n//     )\n//   }\n// }\n\n\n// export default App;\n\n\n\n//   // state is private for the component\n\n// // props are changed through components\n\n\n\n\n\nimport React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\n\nclass ChatApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      currentRoom: { users: [] },\n      messages: [],\n      users: []\n    }\n    this.addMessage = this.addMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const chatManager = new ChatManager({\n      instanceLocator: 'INSTANCE LOCATOR',\n      userId: this.props.currentId,\n      tokenProvider: new TokenProvider({\n        url: 'TOKEN PROVIDER'\n      })\n    })\n    chatManager\n      .connect()\n      .then(currentUser => {\n        this.setState({ currentUser: currentUser })\n        return currentUser.subscribeToRoom({\n          roomId: \"ROOM_ID\",\n          messageLimit: 100,\n          hooks: {\n            onMessage: message => {\n              this.setState({\n                messages: [...this.state.messages, message],\n              })\n            },\n          }\n        })\n      })\n      .then(currentRoom => {\n        this.setState({\n          currentRoom,\n          users: currentRoom.userIds\n        })\n      })\n      .catch(error => console.log(error))\n  }\n\n  addMessage(text) {\n    this.state.currentUser.sendMessage({\n      text,\n      roomId: this.state.currentRoom.id\n    })\n      .catch(error => console.error('error', error));\n  }\n  render() {\n    return (\n      <div>\n        <h2 className=\"header\">Hi There, Ask us anything</h2>\n        <MessageList messages={this.state.messages} />\n        <Input className=\"input-field\" onSubmit={this.addMessage} />\n      </div>\n    )\n  }\n}\nexport default ChatApp;"]},"metadata":{},"sourceType":"module"}